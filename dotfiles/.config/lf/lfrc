# -- lfrc --

# -- setitngs --

set shell zsh
set shellopts '-euy'
set ifs "\n"
set scrolloff 5
set ignorecase true
set incsearch true
set mouse true
set sixel true

# -- preview --

set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id

# -- set window title --
&printf "\033]0; $(pwd | sed 's|$HOME|~|') - lf\007" > /dev/tty


# -- mappings --

# -- disable mappings --

map <pgup>
map <pgdn>
map <home>
map <end>
map [
map ]
map f
map F
map ;
map ,
map y
map d
map "'"
map '"'
map H
map M
map L
map u
map r

# -- set mappings --

# map <esc> quit
map r :rename
map A :push r<c-e>
map I :push r<c-a>
map R :bulkrename
map zp :set preview!
map af :push $touch<space>
map ad :push $mkdir<space>
map <backspace2> :set hidden!
map x $$f
map X !$f
map <c-x> &$f
map DD $trash-put $fx
map DR $trash-restore
map DU !dust
map yy :copy
map dd :cut
map p :paste
map P :link
map yp :yank-path
map yd :yank-dirname
map yf :yank-basename
map y. :yank-basename-without-ext
map J move-parent down
map K move-parent up
map <enter> :shell
map f :zi
map ? %file --mime-type -Lb $fx
map <c-z> $kill -STOP $PPID
map ` :mark-load
map "'" :push :tag<space>
map ut :tag-clear
map oe &wezterm -e $EDITOR $f
map oE $lf -remote "send $id \$$EDITOR \$fx"
map ov &wezterm -e $PAGER $f
map oV $lf -remote "send $id \$$PAGER \$fx"
map of &wezterm -e lf $(pwd)
map oi &pqiv --browse ./
map V :invert-below
map gv :push :glob-select<space>
map ugv :push :glob-unselect<space>
map um :mark-remove
map uv :unselect
map gs :select_tagged_files


# -- commands --

cmd open &{{
  mimetype=$(file --mime-type -Lb $fx)
  case $mimetype in
    text/* | application/json | inode/x-empty )
      lf -remote "send $id \$$EDITOR \$f";;
    audio/* | video/* )
      mpv --title='${filename}' $f;;
    image/*)
      pqiv $f;;
    application/pdf )
      zathura $f &;;
    *)
      case $fx in
        *.exe )
          wine $f;;
        *.pptx | *.odt | *.docx | *.doc | *.ods | *.xlsx | *.odg )
          libreoffice $f;;
        *.zip | *.rar | *.7z )
          atool -xe $f && lf -remote "send $id load";;
        *.html )
          vivaldi-stable $f;;
        *.osz | *.osk )
          osu-stable $f; lf -remote "send $id load";;
        * ) :;;
      esac;;
  esac
}}

cmd yank-path $printf '%s' "$fx" | xsel -bi
cmd yank-dirname $dirname -- "$fx" | head -c-1 | xsel -bi
cmd yank-basename $basename -a -- $fx | head -c-1 | xsel -bi
cmd yank-basename-without-ext ${{
  echo "$fx" |
    xargs -r -d '\n' basename -a |
    awk -e '{
      for (i=length($0); i > 0; i--) {
        if (substr($0, i, 1) == ".") {
          if (i == 1) print $0
          else print substr($0, 0, i-1)
          break
        }
      }
      if (i == 0)
        print $0
    }' |
    if [ -n "$fs" ]; then cat; else tr -d '\n'; fi |
    xsel -bi
}}

cmd on-cd &{{
  printf "\033]0; $(pwd | sed 's|$HOME|~|') - lf\007" > /dev/tty
  zoxide add $(pwd)
}}

cmd bulkrename ${{
  lf -remote "send $id set preview!"
  vimv $(basename -a -- $fx)
  lf -remote "send $id load"
  lf -remote "send $id unselect"
  lf -remote "send $id set preview!"
}}

cmd link %{{
  # y (select for copy) and P to paste soft-link
  # d (select for cut) and P to paste hard-link
  set -- $(cat ~/.local/share/lf/files)
  mode="$1"
  shift
  if [ "$#" -lt 1 ]; then
    lf -remote "send $id echo no files to link"
    exit 0
  fi
  case "$mode" in
    copy) ln -sr -t . -- "$@";;
    move) ln -t . -- "$@";;
  esac
  rm ~/.local/share/lf/files
  lf -remote "send clear"
}}

# zoxide
cmd zi ${{
	result="$(zoxide query -i)"
	lf -remote "send $id cd $result"
}}

cmd tag-clear :tag; tag-toggle

cmd move-parent &{{
    dironly="setlocal '$(dirname "$PWD")' dironly"
    lf -remote "send $id :updir; $dironly true; $1; $dironly false; open"
}}

cmd share $curl -F"file=@$fx" https://0x0.st | xsel -bi

cmd select_tagged_files &{{
  tagged_files=~/.local/share/lf/tags
  while read line
    do
      tagged_file=${line/%??/}
      if [ $(dirname "${tagged_file}") = "${PWD}" ] && [ -e "${tagged_file}" ]; then
        lf -remote "send $id toggle '${tagged_file}'"
      fi
    done < ${tagged_files}
}}
